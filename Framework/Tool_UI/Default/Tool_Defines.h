#pragma once

namespace Tool_UI
{
	enum ETOOL_LEVEL { TOOL_LEVEL_STATIC, TOOL_LEVEL_DEV, TOOL_LEVEL_END };
	enum ETOOL_UI_LAYER { TOOL_UI_LAYER_HUD = 0, TOOL_UI_POPUP_MOVABLE = 1, TOOL_UI_POPUP_FIXED = 2, TOOL_UI_POPUP_FULL = 3,
		TOOL_UI_LAYER_END = 4 };
	enum ETOOL_UI_TYPE {
		TOOL_UI_HUD = 0, TOOL_UI_BAR = 1, TOOL_UI_ICON = 2, TOOL_UI_PROGRESS = 3, TOOL_UI_SLIDER = 4, TOOL_UI_BUTTON = 5,
		TOOL_UI_SCROLLBG = 6, TOOL_UI_SLOT = 7, TOOL_UI_SCROLL = 8, TOOL_UI_COOLTIME = 9, TOOL_UI_UV = 10, TOOL_UI_PANEL = 11,
		TOOL_UI_BACKGROUND = 12, TOOL_UI_BACKGROUND_R = 13, TOOL_UI_HOVER = 14, TOOL_UI_TOOLTIP = 15, TOOL_UI_COVER = 16,
		TOOL_UI_ITEMBG = 17, TOOL_UI_ITEMICON = 18, TOOL_UI_ITEMHOVER = 19, TOOL_UI_ITEMTEXT = 20, TOOL_UI_ITEMTAB = 21,
		TOOL_UI_COVER_RV = 22/*Cover Reverse UpsideDown*/, TOOL_UI_BACKGROUND_NT = 23/*Non Transparent*/, TOOL_UI_TEXT = 24,
		TOOL_UI_LOCKON = 25, TOOL_UI_MONHP = 26, TOOL_UI_MONINFO = 27, TOOL_UI_HL = 28, TOOL_UI_HR = 29, TOOL_UI_INSTANCEITEMBG = 30,
		TOOL_UI_INSTANCEITEMSLOT = 31, TOOL_UI_INSTANCEITEMICON = 32, TOOL_UI_INSTANCEITEMCOOLTIME = 33, TOOL_UI_INSTANCEITEMHOVER = 34,
		TOOL_UI_INSTANCEQUICKBG = 35, TOOL_UI_INSTANCEQUICKMAINSLOT = 36, TOOL_UI_INSTANCEQUICKITEMSLOT = 37,
		TOOL_UI_INSTANCEQUICKCOMBATSLOT = 38, TOOL_UI_INSTANCEQUICKFRAME = 39, TOOL_UI_INSTANCEPARRING = 40, TOOL_UI_INSTANCEABNORMALSLOT = 41,
		TOOL_UI_INSTANCEWORLDHP = 42,TOOL_UI_INSTANCEBOSSHP = 43, TOOL_UI_NORMALTEXT = 44, TOOL_UI_INSTANCEBOSSABNORMAL = 45,
		TOOL_UI_INSTANCEQUEST = 46, TOOL_UI_INSTANCEQUESTINDICATOR = 47, TOOL_UI_INSTANCEINTERACTION = 48, TOOL_UI_INSTANCEDIALOGUE = 49,
		TOOL_UI_CRAFTBG = 50, TOOL_UI_CRAFTHOVER = 51, TOOL_UI_CRAFTTAB = 52, TOOL_UI_CRAFTSLOT = 53, TOOL_UI_TRADEBG = 54,
		TOOL_UI_TRADESLOT = 55, TOOL_UI_TRADETAB = 56, TOOL_UI_TRADEHOVER = 57, TOOL_UI_QUESTCOMPLETE = 58, TOOL_UI_ITEMTOOLTIP = 59,
		TOOL_UI_SPEECHBALLON = 60, TOOL_UI_STARFORCE = 61, TOOL_UI_OPTIONBG = 62, TOOL_UI_OPTIONTAB = 63, TOOL_UI_OPTIONHOVER = 64,
		TOOL_UI_OPTIONSLIDER = 65, TOOL_UI_OPTIONCHECKBOX = 66, TOOL_UI_CRAFTRESULT = 67, TOOL_UI_TUTORIAL = 68, TOOL_UI_END,
	};
	enum ETOOL_UI_TEX_TYPE { TOOL_UI_TEX_D = 0/*DIFFUSE*/, TOOL_UI_TEX_DM = 1/*DIFFUSE&MASK*/, TOOL_UI_TEX_M = 2/*COLOR&MASK*/,
		TOOL_UI_TEX_NONE = 3/*NO TEX*/, TOOL_UI_TEX_DMN = 4/*DIFFUSE&MASK&NOISE*/, TOOL_UI_TEX_DN = 5/*DIFFUSE&NOISE*/, 
		TOOL_UI_TEX_N = 6/*COLOR&NOISE*/, TOOL_UI_TEX_MN = 7/*MASK&NOISE*/, TOOL_UI_TEX_END = 8,
	};
	enum ETOOL_SLOT_TYPE { TOOL_SLOT_MOUSE = 0, TOOL_SLOT_INVEN = 1, TOOL_SLOT_EQUIP = 2, TOOL_SLOT_QUICK = 3, TOOL_SLOT_SKILL = 4,
		TOOL_SLOT_ABNORMAL = 5, TOOL_SLOT_END = 6
	};

	enum ETOOL_ITEM_TYPE {
		TOOL_ITEM_EQUIP = 0, TOOL_ITEM_USABLE = 1, TOOL_ITEM_REINFORCE = 2, TOOL_ITEM_CRAFT = 3, TOOL_ITEM_MISC = 4, TOOL_ITEM_END = 5
	};
	
	const unsigned int g_iWinSizeX = 1280;
	const unsigned int g_iWinSizeY = 720;
}

#include "imgui_stdlib.h"
#include "imgui.h"
#include "imgui_impl_win32.h"
#include "imgui_impl_dx11.h"

#define UIMGR CToolUIMgr::GetInstance()
#define GETPOS GetTransform()->GetState(CTransform::STATE_POSITION)

extern HWND g_hWnd;
extern HINSTANCE g_hInst;

using namespace Tool_UI;

//#ifdef _DEBUG
//
//#define _CRTDBG_MAP_ALLOC
//#include <cstdlib>
//#include <crtdbg.h>
//
//#ifndef DBG_NEW 
//
//#define DBG_NEW new ( _NORMAL_BLOCK , __FILE__ , __LINE__ ) 
//#define new DBG_NEW 
//
//#endif
//#endif
